{% set name = "adios2" %}
{% set version = "2.10.2" %}
{% set sha256 = "14cf0bcd94772194bce0f2c0e74dba187965d1cffd12d45f801c32929158579e" %}
{% set build = 6 %}

# ensure mpi is defined (needed for conda-smithy recipe-lint)
{% set mpi = mpi or 'nompi' %}

# prioritize nompi variant via build number
{% if mpi == 'nompi' %}
{% set build = build + 100 %}
{% endif %}

# add build string so packages can depend on
# mpi or nompi variants
# dependencies:
# `pkg * mpi_mpich_*` for mpich
# `pkg * mpi_*` for any mpi
# `pkg * nompi_*` for no mpi
{% if mpi == 'nompi' %}
{% set mpi_prefix = "nompi" %}
{% else %}
{% set mpi_prefix = "mpi_" + mpi %}
{% endif %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://github.com/ornladios/ADIOS2/archive/refs/tags/v{{ version }}.tar.gz
  sha256: {{ sha256 }}
  patches:
    - pr4196-add-libadios-mode.patch  # This adds ADIOS2_LIBADIOS_MODE remove with >2.10.1

build:
  number: {{ build }}
  # https://github.com/ornladios/ADIOS2/issues/2068
  skip: true  # [python_impl == 'pypy']

outputs:
  - name: libadios2
    script: build-libadios.sh  # [unix]
    script: build-libadios.bat  # [win]
    build:
      string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}
      # ignore run-exports from Python dependencies
      # note: all of these should be duplicated to host/build in adios2
      # to get the right pins
      ignore_run_exports_from:
        - cross-python_{{ target_platform }}
        - python
        - mpi4py
        - numpy
      run_exports:
        # strict runtime dependency on build-time MPI flavor
        # patch-releases are not ABI compatible:
        #   https://docs.conda.io/projects/conda-build/en/latest/resources/variants.html#referencing-subpackages
        #   https://abi-laboratory.pro/?view=timeline&l=adios2
        - {{ pin_subpackage('libadios2', min_pin='x.x.x', max_pin='x.x.x') }} {{ mpi_prefix }}_*
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        # TODO: seems incompatible on OSX and too experimental for Windows
        - {{ compiler('fortran') }}           # [linux]
        - bison                               # [unix]
        - cmake
        - flex                                # [unix]
        - make                                # [unix]
        - ninja                               # [unix]
        - pkg-config                          # [unix]

        # Cross compiliation
        - {{ mpi }}                           # [mpi == 'openmpi' and build_platform != target_platform]
        # Needed for Python cross:
        # Python _build_ is handled here, install in separate output
        - python                              # [build_platform != target_platform]
        - cross-python_{{ target_platform }}  # [build_platform != target_platform]
        - numpy                               # [build_platform != target_platform]
      host:
        - {{ mpi }}  # [mpi != 'nompi']
        - bzip2
        - c-blosc2
        # need to list hdf5 twice to get version pinning from conda_build_config
        - hdf5
        - hdf5 * {{ mpi_prefix }}_*
        - libffi
        - libpng
        - libsodium  # [not win]
        - mpi4py     # [mpi != 'nompi']
        - numpy
        - python
        - zeromq  # [not win]
        - ucx  # [linux and mpi != 'nompi']
        - zfp
        - zlib

    test:
      requires:
        - {{ compiler("c") }}
        - {{ compiler("cxx") }}
        - cmake
        - make  # [unix]
      files:
        - test-libadios.sh
      source_files:
        - examples/hello/helloWorld
      commands:
        - test -f ${PREFIX}/lib/cmake/adios2/adios2-config.cmake                                        # [unix]
        - test -f ${PREFIX}/lib/cmake/adios2/adios2-c-targets.cmake                                     # [unix]
        - test -f ${PREFIX}/lib/cmake/adios2/adios2-cxx11-targets.cmake                                 # [unix]
        - test -f ${PREFIX}/lib/libadios2_cxx11${SHLIB_EXT}                                             # [unix]
        - test -f ${PREFIX}/lib/libadios2_c${SHLIB_EXT}                                                 # [unix]
        - if exist %LIBRARY_PREFIX%\bin\adios2_cxx11.dll (exit 0) else (exit 1)                         # [win]
        - if exist %LIBRARY_PREFIX%\bin\adios2_c.dll (exit 0) else (exit 1)                             # [win]
        - if exist %LIBRARY_PREFIX%\lib\cmake\adios2\adios2-config.cmake (exit 0) else (exit 1)         # [win]
        - if exist %LIBRARY_PREFIX%\lib\cmake\adios2\adios2-c-targets.cmake (exit 0) else (exit 1)      # [win]
        - if exist %LIBRARY_PREFIX%\lib\cmake\adios2\adios2-cxx11-targets.cmake (exit 0) else (exit 1)  # [win]

        # make sure we didn't install Python files
        - test ! -d ${SP_DIR}/adios2  # [unix]
        - if exist %SP_DIR%\adios2 (exit 1) else (exit 0)  # [win]
        - test ! -f ${PREFIX}/bin/bp5dbg  # [unix]
        - if exist %LIBRARY_PREFIX%\bin\bp5dbg (exit 1) else (exit 0)  # [win]
        # run a test build from the examples
        - bash test-libadios.sh  # [unix]

  - name: adios2
    # Install tools and script built in the libadios2 pkg
    script: build-adios-py.sh  # [unix]
    script: build-adios-py.bat  # [win]
    build:
      string: {{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ build }}
      run_exports:
        - {{ pin_subpackage('adios2', min_pin='x.x.x', max_pin='x.x.x') }} {{ mpi_prefix }}_*

    # below requirements should match exactly
    # those in the actual build above which have relevant run_exports
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ stdlib("c") }}
        - {{ compiler("cxx") }}
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - numpy                                  # [build_platform != target_platform]
        - cmake
      host:
        - {{ mpi }}  # [mpi != 'nompi']
        - {{ pin_subpackage("libadios2", exact=True) }}
        - hdf5
        - hdf5 * {{ mpi_prefix }}_*
        - python
        - mpi4py     # [mpi != 'nompi']
        - numpy
        - ucx  # [linux and mpi != 'nompi']
        - zfp
      run:
        - {{ pin_subpackage("libadios2", exact=True) }}
        - python
    test:
      # test.imports is unreliable for multiple outputs
      commands:
        # Python package works:
        - python -c "import adios2; print(adios2.__version__)"
        # Python-based scripts are present:
        - bp5dbg --help  # [unix]
        - bpls --help  # [unix]
        - if exist %LIBRARY_PREFIX%\bin\bp5dbg (exit 0) else (exit 1)  # [win]

about:
  home: https://www.olcf.ornl.gov/center-projects/adios/
  license: Apache-2.0
  license_file: LICENSE
  summary: Next generation of ADIOS developed in the Exascale Computing Program

  description: |
    ADIOS2 is the latest implementation of the ADaptable Input Output System,
    ADIOS. This brand new architecture was designed to continue supporting the
    performance legacy of ADIOS, and extend its current capabilities to address
    current and future input/output (IO) challenges in the scientific data
    lifecycle through effective research and development (R&D) activities.
  doc_url: https://adios2.readthedocs.io
  dev_url: https://github.com/ornladios/ADIOS2

extra:
  feedstock-name: adios2
  recipe-maintainers:
    - ax3l
    - vicentebolea
    - williamfgc
